/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frmFrame;

import java.io.File;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.CreationHelper;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.VerticalAlignment;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Admin
 */
public class frmQLSanpham extends javax.swing.JFrame {

    /**
     * Creates new form frmQLSanpham
     */
    public frmQLSanpham() {
        initComponents();
        loadcbncc();
        load_sanpham();
        ngaynhap.setDate(new java.util.Date());
        nguoinhap.setText(dangnhap.name);
        nguoinhap.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        masanpham = new javax.swing.JTextField();
        soluong = new javax.swing.JTextField();
        donvitinh = new javax.swing.JTextField();
        nguoinhap = new javax.swing.JTextField();
        tensanpham = new javax.swing.JTextField();
        gianhap = new javax.swing.JTextField();
        giaban = new javax.swing.JTextField();
        nhacungcap = new javax.swing.JComboBox<>();
        ngaynhap = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        them = new javax.swing.JButton();
        sua = new javax.swing.JButton();
        xoa = new javax.swing.JButton();
        in = new javax.swing.JButton();
        thoat = new javax.swing.JButton();
        nhaplai = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablesanpham = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txttiemkiem = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1024, 768));
        setResizable(false);
        setSize(new java.awt.Dimension(1024, 768));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 255));
        jLabel1.setText("QUẢN LÝ SẢN PHẨM");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 18))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Mã sản phẩm:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Tên sản phẩm:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Nhà cung cấp:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Giá nhập:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Giá bán:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Số lượng:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Ngày nhập:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("Đơn vị tính:");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel11.setText("Người nhập:");

        masanpham.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        soluong.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        soluong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                soluongKeyReleased(evt);
            }
        });

        donvitinh.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        nguoinhap.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        tensanpham.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        gianhap.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        gianhap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                gianhapKeyReleased(evt);
            }
        });

        giaban.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        giaban.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                giabanKeyReleased(evt);
            }
        });

        nhacungcap.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        nhacungcap.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn nhà cung cấp" }));

        ngaynhap.setDateFormatString("dd/MM/yyyy");
        ngaynhap.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(60, 60, 60)
                        .addComponent(giaban, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tensanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(masanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(gianhap, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                .addComponent(nhacungcap, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(soluong)
                    .addComponent(nguoinhap)
                    .addComponent(donvitinh)
                    .addComponent(ngaynhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(masanpham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(soluong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tensanpham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(ngaynhap, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel10)
                    .addComponent(donvitinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nhacungcap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(gianhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(nguoinhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(giaban, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tác vụ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 18))); // NOI18N

        them.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        them.setText("Thêm");
        them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themActionPerformed(evt);
            }
        });

        sua.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        sua.setText("Sửa");
        sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suaActionPerformed(evt);
            }
        });

        xoa.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        xoa.setText("Xóa");
        xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaActionPerformed(evt);
            }
        });

        in.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        in.setText("In");
        in.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inActionPerformed(evt);
            }
        });

        thoat.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        thoat.setText("Thoát");

        nhaplai.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        nhaplai.setText("Nhập lại");
        nhaplai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhaplaiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(them, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sua, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(in, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(thoat, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nhaplai, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(them)
                .addGap(18, 18, 18)
                .addComponent(sua)
                .addGap(18, 18, 18)
                .addComponent(xoa)
                .addGap(18, 18, 18)
                .addComponent(in)
                .addGap(18, 18, 18)
                .addComponent(nhaplai)
                .addGap(23, 23, 23)
                .addComponent(thoat)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        tablesanpham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablesanpham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablesanphamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablesanpham);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Tìm kiếm sản phẩm:");

        txttiemkiem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txttiemkiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txttiemkiemKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txttiemkiem))
                                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(391, 391, 391)
                        .addComponent(jLabel1)
                        .addGap(0, 387, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txttiemkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    Connection con;
    private void tablesanphamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablesanphamMouseClicked
        int i=tablesanpham.getSelectedRow();
        DefaultTableModel tb= (DefaultTableModel) tablesanpham.getModel();
        masanpham.setText(tb.getValueAt(i, 0).toString());
        tensanpham.setText(tb.getValueAt(i, 1).toString());
        nhacungcap.setSelectedItem(tb.getValueAt(i, 2).toString());
        gianhap.setText(tb.getValueAt(i, 3).toString());
        giaban.setText(tb.getValueAt(i, 4).toString());
        soluong.setText(tb.getValueAt(i, 5).toString());
        String nn= tb.getValueAt(i, 6).toString();
        java.util.Date ngs;
        try {
            ngs= new SimpleDateFormat("yyyy-MM-dd").parse(nn);
            ngaynhap.setDate(ngs);
        } catch (Exception e) {
            e.printStackTrace();
        }
        donvitinh.setText(tb.getValueAt(i, 7).toString());
        nguoinhap.setText(tb.getValueAt(i, 8).toString());
        masanpham.setEnabled(false);
        them.setEnabled(false);
    }//GEN-LAST:event_tablesanphamMouseClicked

    private void suaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suaActionPerformed
        String masp=masanpham.getText().trim();
        String tensp=tensanpham.getText().trim();
        String tenncc=nhacungcap.getSelectedItem().toString();
        String mancc=ncc1.get(tenncc);
        String gian=gianhap.getText().trim();
        String giab=giaban.getText().trim();
        String sl=soluong.getText().trim();
        Date ngayn= new Date(ngaynhap.getDate().getTime());
        String dvt=donvitinh.getText().trim();
        String mann=nguoinhap.getText().trim();
        if(masp.equals("") || tensp.equals("") || tenncc.equals("Chọn nhà cung cấp") || gian.equals("") || giab.equals("") || sl.equals("") || dvt.equals("") || mann.equals("")){
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đủ thông tin!");
            return;
        }
        try {
            con=ConDB.ketnoiDB();
            String sql="update sanpham set tensp=N'"+ tensp + "', mancc='"+mancc+"', gianhap='"+gian+"', giaban='"+giab+"', soluong='"+sl+"', ngaynhap='"+ngayn+"', donvitinh='"+dvt+"', maquanly='"+mann+"' where masp='"+masp+"'";
            Statement st= con.createStatement();
            st.executeUpdate(sql);
            con.close();
            JOptionPane.showMessageDialog(this, "Sửa thông tin sản phẩm thành công!");
            load_sanpham();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_suaActionPerformed

    private void nhaplaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhaplaiActionPerformed
        masanpham.setText("");
        tensanpham.setText("");
        nhacungcap.setSelectedItem("Chọn nhà cung cấp");
        gianhap.setText("");
        giaban.setText("");
        soluong.setText("");
        donvitinh.setText("");
        nguoinhap.setText(dangnhap.name);
        masanpham.setEnabled(true);
        them.setEnabled(true);
    }//GEN-LAST:event_nhaplaiActionPerformed

    private void xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaActionPerformed
        int rp = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa sản phẩm không?", 
                                                     "Xác nhận", JOptionPane.YES_NO_OPTION);
        if(rp==JOptionPane.YES_OPTION){
            String ma= masanpham.getText().trim();
            try {
                con=ConDB.ketnoiDB();
                String sql="delete from sanpham where masp='"+ma+"'";
                Statement st= con.createStatement();
                st.executeUpdate(sql);
                con.close();
                JOptionPane.showMessageDialog(this, "Xóa thông tin sản phẩm thành công!");
                load_sanpham();
            } catch (Exception e) {
                e.printStackTrace();
            }
            masanpham.setText("");
            tensanpham.setText("");
            nhacungcap.setSelectedItem("Chọn nhà cung cấp");
            gianhap.setText("");
            giaban.setText("");
            soluong.setText("");
            donvitinh.setText("");
            nguoinhap.setText(dangnhap.name);
        }else{
            return;
        }
    }//GEN-LAST:event_xoaActionPerformed

    private void txttiemkiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttiemkiemKeyReleased
        String tk=txttiemkiem.getText().trim();
        try {
            con=ConDB.ketnoiDB();
            String sql="select * from sanpham where tensp like N'%"+tk+"%'";
            Statement st= con.createStatement();
            ResultSet rs= st.executeQuery(sql);
            tablesanpham.removeAll();
            String[] tdb={"Mã sản phẩm", "Tên sản phẩm", "Nhà cung cấp", "Giá nhập", "Giá bán", "Số lượng", "Ngày nhập", "Đơn vị tính", "Người nhập"};
            DefaultTableModel model= new DefaultTableModel(tdb, 0);
            while(rs.next()){
                Vector v= new Vector();
                v.add(rs.getString("masp"));
                v.add(rs.getString("tensp"));
                v.add(ncc2.get(rs.getString("mancc")));
                v.add(rs.getString("gianhap"));
                v.add(rs.getString("giaban"));
                v.add(rs.getString("soluong"));
                v.add(rs.getString("ngaynhap"));
                v.add(rs.getString("donvitinh"));
                v.add(mql2.get(rs.getString("maquanly")));
                model.addRow(v);
            }
            tablesanpham.setModel(model);
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txttiemkiemKeyReleased

    private void themActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themActionPerformed
        String masp=masanpham.getText().trim();
        String tensp=tensanpham.getText().trim();
        String tenncc=nhacungcap.getSelectedItem().toString();
        String mancc=ncc1.get(tenncc);
        String gian=gianhap.getText().trim();
        String giab=giaban.getText().trim();
        String sl=soluong.getText().trim();
        Date ngayn= new Date(ngaynhap.getDate().getTime());
        String dvt=donvitinh.getText().trim();
        String tennn=nguoinhap.getText().trim();
        String mann=mql1.get(tennn);
        if(masp.equals("") || tensp.equals("") || tenncc.equals("Chọn nhà cung cấp") || gian.equals("") || giab.equals("") || sl.equals("") || dvt.equals("") || mann.equals("")){
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đủ thông tin!");
            return;
        }
        if(!ktratrung(masp)){
            JOptionPane.showMessageDialog(this, "Mã sản phẩm đã tồn tại");
            return;
        }
        try {
            con=ConDB.ketnoiDB();
            String sql= "insert into sanpham values('"+ masp +"', N'"+ tensp +"', '"+ mancc +"', '"+ gian +"', '"+ giab +"', '"+ sl +"', '"+ ngayn +"', '"+ dvt +"', '"+ mann +"')";
            Statement st= con.createStatement();
            st.executeUpdate(sql);
            con.close();
            JOptionPane.showMessageDialog(this, "Thêm sản phẩm thành công!");
            load_sanpham();
            masanpham.setText("");
            tensanpham.setText("");
            nhacungcap.setSelectedItem("Chọn nhà cung cấp");
            gianhap.setText("");
            giaban.setText("");
            soluong.setText("");
            ngaynhap.setDate(new java.util.Date());
            donvitinh.setText("");
            nguoinhap.setText(dangnhap.name);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_themActionPerformed

    private void gianhapKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gianhapKeyReleased
        if(!((evt.getKeyChar()>='0'&&evt.getKeyChar()<='9')||evt.getKeyChar()==(char)8)){
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số");
            String s=gianhap.getText();
            gianhap.setText(s.substring(0, s.length()-1));
        }
    }//GEN-LAST:event_gianhapKeyReleased

    private void giabanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_giabanKeyReleased
        if(!((evt.getKeyChar()>='0'&&evt.getKeyChar()<='9')||evt.getKeyChar()==(char)8)){
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số");
            String s=giaban.getText();
            giaban.setText(s.substring(0, s.length()-1));
        }
    }//GEN-LAST:event_giabanKeyReleased

    private void soluongKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_soluongKeyReleased
        if(!((evt.getKeyChar()>='0'&&evt.getKeyChar()<='9')||evt.getKeyChar()==(char)8)){
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số");
            String s=soluong.getText();
            soluong.setText(s.substring(0, s.length()-1));
        }
    }//GEN-LAST:event_soluongKeyReleased
    private static CellStyle DinhdangHeader(XSSFSheet sheet) {
        // Create font
        Font font = sheet.getWorkbook().createFont();
        font.setFontName("Times New Roman");
        font.setBold(true);
        font.setFontHeightInPoints((short) 14); // font size
        font.setColor(IndexedColors.WHITE.getIndex()); // text color

        // Create CellStyle
        CellStyle cellStyle = sheet.getWorkbook().createCellStyle();
        cellStyle.setFont(font);
        cellStyle.setAlignment(HorizontalAlignment.CENTER);
        cellStyle.setVerticalAlignment(VerticalAlignment.TOP);
        cellStyle.setFillForegroundColor(IndexedColors.AQUA.getIndex());
        cellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
        cellStyle.setBorderBottom(BorderStyle.THIN);
        cellStyle.setWrapText(true);
        return cellStyle;
    }
    private void inActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inActionPerformed
        try {
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet spreadsheet = workbook.createSheet("sanpham");
            // register the columns you wish to track and compute the column width
            CreationHelper createHelper = workbook.getCreationHelper();
            XSSFRow row = null;
            Cell cell = null;
            row = spreadsheet.createRow((short) 2);
            row.setHeight((short) 500);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("DANH SÁCH SẢN PHẨM");
            //Tạo dòng tiêu đều của bảng
            // create CellStyle
            CellStyle cellStyle_Head = DinhdangHeader(spreadsheet);
            row = spreadsheet.createRow((short) 3);
            row.setHeight((short) 1000);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellStyle(cellStyle_Head);
            cell.setCellValue("STT");
            cell = row.createCell(1, CellType.STRING);
            cell.setCellStyle(cellStyle_Head);
            cell.setCellValue("Mã sản phẩm");
            cell = row.createCell(2, CellType.STRING);
            cell.setCellStyle(cellStyle_Head);
            cell.setCellValue("Tên sản phẩm");
            cell = row.createCell(3, CellType.STRING);
            cell.setCellStyle(cellStyle_Head);
            cell.setCellValue("Nhà cung cấp");
            cell = row.createCell(4, CellType.STRING);
            cell.setCellStyle(cellStyle_Head);
            cell.setCellValue("Giá nhập");
            cell = row.createCell(5, CellType.STRING);
            cell.setCellStyle(cellStyle_Head);
            cell.setCellValue("Giá bán");
            cell = row.createCell(6, CellType.STRING);
            cell.setCellStyle(cellStyle_Head);
            cell.setCellValue("Số lượng");
            cell = row.createCell(7, CellType.STRING);
            cell.setCellStyle(cellStyle_Head);
            cell.setCellValue("Ngày nhập");
            cell = row.createCell(8, CellType.STRING);
            cell.setCellStyle(cellStyle_Head);
            cell.setCellValue("Đơn vị tính");
            cell = row.createCell(9, CellType.STRING);
            cell.setCellStyle(cellStyle_Head);
            cell.setCellValue("Người nhập");
            
             //Kết nối DB
            con = ConDB.ketnoiDB();
            String sql = "Select * From sanpham";
            PreparedStatement st = con.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            //Đổ dữ liệu từ rs vào các ô trong excel
            ResultSetMetaData rsmd = rs.getMetaData();
            int tongsocot = rsmd.getColumnCount();
            //Đinh dạng Tạo đường kẻ cho ô chứa dữ liệu
            CellStyle cellStyle_data = spreadsheet.getWorkbook().createCellStyle();
            cellStyle_data.setBorderLeft(BorderStyle.THIN);
            cellStyle_data.setBorderRight(BorderStyle.THIN);
            cellStyle_data.setBorderBottom(BorderStyle.THIN);
            int i = 0;
            while (rs.next()) {
                row = spreadsheet.createRow((short) 4 + i);
                row.setHeight((short) 400);
                cell = row.createCell(0);
                cell.setCellStyle(cellStyle_data);
                cell.setCellValue(i + 1);

                cell = row.createCell(1);
                cell.setCellStyle(cellStyle_data);
                cell.setCellValue(rs.getString("masp"));

                cell = row.createCell(2);
                cell.setCellStyle(cellStyle_data);
                cell.setCellValue(rs.getString("tensp"));

                cell = row.createCell(3);
                cell.setCellStyle(cellStyle_data);
                cell.setCellValue(ncc2.get(rs.getString("mancc")));

                cell = row.createCell(4);
                cell.setCellStyle(cellStyle_data);
                cell.setCellValue(rs.getString("gianhap"));

                cell = row.createCell(5);
                cell.setCellStyle(cellStyle_data);
                cell.setCellValue(rs.getString("giaban"));

                cell = row.createCell(6);
                cell.setCellStyle(cellStyle_data);
                cell.setCellValue(rs.getString("soluong"));
                
                //Định dạng ngày tháng trong excel
                java.util.Date ngay = new java.util.Date(rs.getDate("ngaynhap").getTime());
                CellStyle cellStyle = workbook.createCellStyle();
                cellStyle.setDataFormat(createHelper.createDataFormat().getFormat("dd/MM/yyyy"));
                cellStyle.setBorderLeft(BorderStyle.THIN);
                cellStyle.setBorderRight(BorderStyle.THIN);
                cellStyle.setBorderBottom(BorderStyle.THIN);
                cell = row.createCell(7);
                cell.setCellValue(ngay);
                cell.setCellStyle(cellStyle);
                
                cell = row.createCell(8);
                cell.setCellStyle(cellStyle_data);
                cell.setCellValue(rs.getString("donvitinh"));
                
                cell = row.createCell(9);
                cell.setCellStyle(cellStyle_data);
                cell.setCellValue(mql2.get(rs.getString("maquanly")));

                i++;
            }
            //Hiệu chỉnh độ rộng của cột
            for (int col = 0; col <= tongsocot; col++) {
                spreadsheet.autoSizeColumn(col);
            }

            File f = new File("D:\\Danhsachsanpham.xlsx");
            FileOutputStream out = new FileOutputStream(f);
            workbook.write(out);
            out.close();
            JOptionPane.showMessageDialog(this, "In file Excel thành công!");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_inActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmQLSanpham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmQLSanpham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmQLSanpham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmQLSanpham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmQLSanpham().setVisible(true);
            }
        });
    }
    
    Map<String, String> ncc1= new HashMap<>();
    Map<String, String> ncc2= new HashMap<>();
    Map<String, String> mql1= new HashMap<>();
    Map<String, String> mql2= new HashMap<>();
    private void loadcbncc(){
        try {
            con=ConDB.ketnoiDB();
            String sql="Select * from nhacungcap";
            Statement st= con.createStatement();
            ResultSet rs= st.executeQuery(sql);
            while(rs.next()){
                nhacungcap.addItem(rs.getString("tenncc"));
                ncc1.put(rs.getString("tenncc"), rs.getString("mancc"));
                ncc2.put(rs.getString("mancc"), rs.getString("tenncc"));
            }
            String sql2="Select * from quanly";
            Statement st2= con.createStatement();
            ResultSet rs2= st2.executeQuery(sql2);
            while(rs2.next()){
                mql1.put(rs2.getString("hoten"), rs2.getString("maquanly"));
                mql2.put(rs2.getString("maquanly"), rs2.getString("hoten"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void load_sanpham(){
        try {
            con=ConDB.ketnoiDB();
            Statement st=con.createStatement();
            String sql="Select * from sanpham";
            ResultSet rs= st.executeQuery(sql);
            tablesanpham.removeAll();
            String[] tdb={"Mã sản phẩm", "Tên sản phẩm", "Nhà cung cấp", "Giá nhập", "Giá bán", "Số lượng", "Ngày nhập", "Đơn vị tính", "Người nhập"};
            DefaultTableModel model= new DefaultTableModel(tdb, 0);
            while(rs.next()){
                Vector v= new Vector();
                v.add(rs.getString("masp"));
                v.add(rs.getString("tensp"));
                v.add(ncc2.get(rs.getString("mancc")));
                v.add(rs.getString("gianhap"));
                v.add(rs.getString("giaban"));
                v.add(rs.getString("soluong"));
                v.add(rs.getString("ngaynhap"));
                v.add(rs.getString("donvitinh"));
                v.add(mql2.get(rs.getString("maquanly")));
                model.addRow(v);
            }
            tablesanpham.setModel(model);
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private boolean ktratrung(String ma){
        boolean kq=false;
        try {
            con=ConDB.ketnoiDB();
            String sql="select * from sanpham where masp='"+ma+"'";
            Statement st= con.createStatement();
            ResultSet rs= st.executeQuery(sql);
            if(!rs.next()){
                kq=true;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return kq;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField donvitinh;
    private javax.swing.JTextField giaban;
    private javax.swing.JTextField gianhap;
    private javax.swing.JButton in;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField masanpham;
    private com.toedter.calendar.JDateChooser ngaynhap;
    private javax.swing.JTextField nguoinhap;
    private javax.swing.JComboBox<String> nhacungcap;
    private javax.swing.JButton nhaplai;
    private javax.swing.JTextField soluong;
    private javax.swing.JButton sua;
    private javax.swing.JTable tablesanpham;
    private javax.swing.JTextField tensanpham;
    private javax.swing.JButton them;
    private javax.swing.JButton thoat;
    private javax.swing.JTextField txttiemkiem;
    private javax.swing.JButton xoa;
    // End of variables declaration//GEN-END:variables
}
